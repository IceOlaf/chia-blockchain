(mod (
  NFT_MOD_HASH
  SINGLETON_STRUCT ; ((SINGLETON_MOD_HASH, (SINGLETON_LAUNCHER_ID, LAUNCHER_PUZZLE_HASH)))
  CURRENT_OWNER_DID
  NFT_TRANSFER_PROGRAM_HASH
  my_amount
  my_did_inner_hash
  new_did
  new_did_inner_hash
  trade_prices_list
  transfer_program_reveal
  transfer_program_solution
)

  (include condition_codes.clvm)
  (include curry-and-treehash.clinc)
  (include singleton_truths.clib)

  ; takes a lisp tree and returns the hash of it
  (defun sha256tree1 (TREE)
        (if (l TREE)
            (sha256 2 (sha256tree1 (f TREE)) (sha256tree1 (r TREE)))
            (sha256 ONE TREE)
        )
  )

  (defun-inline nft_puzzle_hash (NFT_MOD_HASH SINGLETON_STRUCT NFT_TRANSFER_PROGRAM_HASH next_owner_did)
    (puzzle-hash-of-curried-function NFT_MOD_HASH
                                     (sha256tree1 NFT_TRANSFER_PROGRAM_HASH)
                                     (sha256 ONE next_owner_did)
                                     (sha256tree1 SINGLETON_STRUCT)
                                     (sha256 ONE NFT_MOD_HASH)
    )
  )

  ;; return the full puzzlehash for a singleton with the innerpuzzle curried in
  ; puzzle-hash-of-curried-function is imported from curry-and-treehash.clinc
  (defun-inline calculate_full_puzzle_hash (SINGLETON_STRUCT inner_puzzle_hash)
     (puzzle-hash-of-curried-function (f SINGLETON_STRUCT)
                                      inner_puzzle_hash
                                      (sha256tree1 SINGLETON_STRUCT)
     )
  )


  (defun stager (
    NFT_MOD_HASH
    SINGLETON_STRUCT ; ((SINGLETON_MOD_HASH, (NFT_SINGLETON_LAUNCHER_ID, LAUNCHER_PUZZLE_HASH)))
    CURRENT_OWNER_DID
    NFT_TRANSFER_PROGRAM_HASH
    my_amount
    my_did_inner_hash
    new_did
    new_did_inner_hash
    trade_prices_list
    transfer_program_reveal
    transfer_program_solution
    trade_prices_list_hash
  )
  (c (list CREATE_COIN_ANNOUNCEMENT trade_prices_list_hash new_did)
    (c (list ASSERT_PUZZLE_ANNOUNCEMENT (sha256 (calculate_full_puzzle_hash (c (f SINGLETON_STRUCT) (c new_did (r (r SINGLETON_STRUCT)))) new_did_inner_hash) trade_prices_list_hash (f (r SINGLETON_STRUCT))))
      (c (list ASSERT_PUZZLE_ANNOUNCEMENT (sha256 (calculate_full_puzzle_hash (c (f SINGLETON_STRUCT) (c CURRENT_OWNER_DID (r (r SINGLETON_STRUCT)))) my_did_inner_hash) trade_prices_list_hash new_did))
        (c (list CREATE_COIN (nft_puzzle_hash NFT_MOD_HASH SINGLETON_STRUCT NFT_TRANSFER_PROGRAM_HASH new_did) my_amount (list new_did))
          (c (list ASSERT_MY_AMOUNT my_amount)
            (if (= (sha256tree1 transfer_program_reveal) NFT_TRANSFER_PROGRAM_HASH)
              (a transfer_program_reveal (list CURRENT_OWNER_DID new_did trade_prices_list (f (r SINGLETON_STRUCT)) transfer_program_solution))
              (x)
            )
          )
        )
      )
    )
  )
  )

  ; main
  (if new_did
    (if trade_prices_list
      (stager
        NFT_MOD_HASH
        SINGLETON_STRUCT ; ((SINGLETON_MOD_HASH, (NFT_SINGLETON_LAUNCHER_ID, LAUNCHER_PUZZLE_HASH)))
        CURRENT_OWNER_DID
        NFT_TRANSFER_PROGRAM_HASH
        my_amount
        my_did_inner_hash
        new_did
        new_did_inner_hash
        trade_prices_list
        transfer_program_reveal
        transfer_program_solution
        (sha256tree1 trade_prices_list)
      )
      (c (list CREATE_COIN_ANNOUNCEMENT 0)
        (c (list ASSERT_PUZZLE_ANNOUNCEMENT (sha256 (calculate_full_puzzle_hash (c (f SINGLETON_STRUCT) (c CURRENT_OWNER_DID (r (r SINGLETON_STRUCT)))) my_did_inner_hash) new_did))
          (c (list CREATE_COIN (nft_puzzle_hash NFT_MOD_HASH SINGLETON_STRUCT NFT_TRANSFER_PROGRAM_HASH new_did) my_amount (list new_did))
            (list (list ASSERT_MY_AMOUNT my_amount))
          )
        )
      )
    )

    (list
      (list CREATE_COIN (nft_puzzle_hash NFT_MOD_HASH SINGLETON_STRUCT NFT_TRANSFER_PROGRAM_HASH CURRENT_OWNER_DID) my_amount (list CURRENT_OWNER_DID))
      (list ASSERT_MY_AMOUNT my_amount)
      (list ASSERT_PUZZLE_ANNOUNCEMENT (sha256 (calculate_full_puzzle_hash (c (f SINGLETON_STRUCT) (c CURRENT_OWNER_DID (r (r SINGLETON_STRUCT)))) my_did_inner_hash) 'a'))
      (list CREATE_COIN_ANNOUNCEMENT CURRENT_OWNER_DID)
    )
  )
)
